name: Install dbForge DevOps Automation for SQL Server

on: 
  push:
    branches:
      - main

jobs:
  install:
    runs-on: windows-latest

    steps:
      - name: Check System Resources
        run: |
          $memory = Get-CimInstance Win32_OperatingSystem
          Write-Host "Free Memory: $($memory.FreePhysicalMemory / 1MB) MB"
          Write-Host "Total Memory: $($memory.TotalVisibleMemorySize / 1MB) MB"
          $disk = Get-PSDrive -Name C
          Write-Host "Free Disk Space on C: $($disk.Free / 1GB) GB"

      - name: Set PowerShell Execution Policy
        run: Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          Invoke-WebRequest https://chocolatey.org/install.ps1 -UseBasicParsing | Invoke-Expression

      - name: Try Chocolatey Install
        run: |
          choco install dbforge-sql-devops -y --no-progress --debug --verbose --log-level=debug
        continue-on-error: true

      - name: Display Chocolatey Log
        if: failure()
        run: Get-Content -Path "C:\ProgramData\chocolatey\logs\chocolatey.log"

      - name: Display dbForge Installer Log
        if: failure()
        run: |
          if (Test-Path "C:\Users\runneradmin\AppData\Local\Temp\chocolatey\dbforge-sql-devops\dbforge-sql-devops.1.2.78.Install.log") {
            Get-Content -Path "C:\Users\runneradmin\AppData\Local\Temp\chocolatey\dbforge-sql-devops\dbforge-sql-devops.1.2.78.Install.log"
          } else {
            Write-Host "Installer log not found"
          }

      - name: Fallback to Manual Install
        if: failure()
        run: |
          Write-Host "Starting manual installation of dbForge DevOps Automation..."
          # Check system resources again
          $memory = Get-CimInstance Win32_OperatingSystem
          Write-Host "Free Memory: $($memory.FreePhysicalMemory / 1MB) MB"
          $disk = Get-PSDrive -Name C
          Write-Host "Free Disk Space on C: $($disk.Free / 1GB) GB"
          
          # Download the installer
          Invoke-WebRequest -Uri "https://choco.devart.com/s/39D10B263B1FA4133C620152B61E984BDB890ECA659E8BE9889E799896EC0414/devopspowershellsql12.exe" -OutFile "devopspowershellsql12.exe"
          
          # Run the installer silently
          Start-Process -FilePath ".\devopspowershellsql12.exe" -ArgumentList "/VERYSILENT /FORCECLOSEAPPLICATIONS /ngen=0 /log=`"install.log`"" -Verb RunAs -Wait

          # Check the installation exit code
          if ($LASTEXITCODE -eq 0 -or $LASTEXITCODE -eq 3010 -or $LASTEXITCODE -eq 1641) {
            Write-Host "Manual installation succeeded with exit code $LASTEXITCODE"
          } else {
            Write-Host "Manual installation failed with exit code $LASTEXITCODE"
          }

      - name: Display Manual Install Log
        if: failure()
        run: |
          if (Test-Path "install.log") {
            Get-Content -Path "install.log"
          } else {
            Write-Host "Manual install log not found"
          }

      - name: Ensure Installation Succeeded
        run: |
          if (-not (Test-Path "C:\Program Files (x86)\dbForge DevOps Automation for SQL Server")) {
            Write-Host "Installation failed"
            exit 1
          }
          Write-Host "Installation succeeded"
