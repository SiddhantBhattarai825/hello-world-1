name: Manual Install dbForge DevOps Automation for SQL Server

on:
  push:
    branches:
      - main

jobs:
  install:
    runs-on: windows-latest

    steps:
      - name: Check System Resources
        run: |
          $memory = Get-CimInstance Win32_OperatingSystem
          Write-Host "Free Memory: $($memory.FreePhysicalMemory / 1MB) MB"
          Write-Host "Total Memory: $($memory.TotalVisibleMemorySize / 1MB) MB"
          $disk = Get-PSDrive -Name C
          Write-Host "Free Disk Space on C: $($disk.Free / 1GB) GB"

      - name: Set PowerShell Execution Policy
        run: Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned

      - name: Install PowerShellGet and PackageManagement
        run: |
          # Install or ensure PackageManagement and PowerShellGet modules are installed and imported
          if (-not (Get-Module -ListAvailable -Name PackageManagement)) {
            Install-Module -Name PackageManagement -Force -AllowClobber -Scope CurrentUser
          }

          if (-not (Get-Module -ListAvailable -Name PowerShellGet)) {
            Install-Module -Name PowerShellGet -Force -AllowClobber -Scope CurrentUser
          }

          # Import the modules to ensure they are available
          Import-Module PowerShellGet -Force
          Import-Module PackageManagement -Force

      - name: Download dbForge SQL Tools Installer
        run: |
          # Download the installer from the provided URL
          Invoke-WebRequest -Uri "https://choco.devart.com/s/39D10B263B1FA4133C620152B61E984BDB890ECA659E8BE9889E799896EC0414/devopspowershellsql12.exe" -OutFile "devopspowershellsql12.exe"

      - name: Install dbForge SQL Tools via PowerShell
        run: |
          # Define installer path and arguments
          $installerPath = ".\devopspowershellsql12.exe"
          $arguments = "/VERYSILENT /FORCECLOSEAPPLICATIONS /ngen=0 /log=`"install.log`""
          
          # Run the installer with silent arguments
          Start-Process -FilePath $installerPath -ArgumentList $arguments -Wait

      - name: Verify Installation
        run: |
          # Verify if the installation was successful by checking the installed program location
          if (Test-Path "C:\Program Files (x86)\dbForge DevOps Automation for SQL Server") {
            Write-Host "Installation succeeded."
          } else {
            Write-Host "Installation failed."
            exit 1
          }

      - name: Display Installation Logs
        if: failure()
        run: |
          # Display the install log in case of failure
          if (Test-Path "install.log") {
            Get-Content -Path "install.log"
          } else {
            Write-Host "Installation log not found"
          }

      - name: Ensure Installation Succeeded
        run: |
          if (-not (Test-Path "C:\Program Files (x86)\dbForge DevOps Automation for SQL Server")) {
            Write-Host "Installation failed"
            exit 1
          }
          Write-Host "Installation succeeded"
